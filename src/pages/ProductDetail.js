import React, { useEffect, useState, useRef } from "react";
import { useParams } from "react-router-dom";
import axios from "axios";

function ProductDetail() {
  const { id } = useParams();
  const [product, setProduct] = useState(null);
  const [adding, setAdding] = useState(false);
  const imgRef = useRef();

  useEffect(() => {
    axios.get(`http://localhost:5000/products/${id}`)
      .then(res => setProduct(res.data))
      .catch(err => console.error("L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m:", err));
  }, [id]);

  const handleAddToCart = async () => {
    const token = localStorage.getItem("token");
    if (!token) {
      alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng");
      return;
    }

    // L·∫•y v·ªã tr√≠ ·∫£nh s·∫£n ph·∫©m v√† icon gi·ªè h√†ng
    const cartIcon = document.getElementById("cart-icon");
    if (!imgRef.current || !cartIcon) {
      alert("L·ªói: kh√¥ng t√¨m th·∫•y ·∫£nh s·∫£n ph·∫©m ho·∫∑c icon gi·ªè h√†ng.");
      return;
    }

    const imgRect = imgRef.current.getBoundingClientRect();
    const cartRect = cartIcon.getBoundingClientRect();

    // Clone ·∫£nh s·∫£n ph·∫©m
    const cloneImg = imgRef.current.cloneNode(true);
    cloneImg.style.position = "fixed";
    cloneImg.style.left = `${imgRect.left}px`;
    cloneImg.style.top = `${imgRect.top}px`;
    cloneImg.style.width = `${imgRect.width}px`;
    cloneImg.style.height = `${imgRect.height}px`;
    cloneImg.style.transition = "all 1s ease-in-out";
    cloneImg.style.zIndex = 1000;
    cloneImg.style.borderRadius = "8px";
    cloneImg.style.pointerEvents = "none"; // tr√°nh ·∫£nh h∆∞·ªüng ƒë·∫øn t∆∞∆°ng t√°c
    document.body.appendChild(cloneImg);

    // Force reflow ƒë·ªÉ ch·∫Øc ch·∫Øn √°p d·ª•ng v·ªã tr√≠ ban ƒë·∫ßu
    cloneImg.getBoundingClientRect();

    // B·∫Øt ƒë·∫ßu animation bay v√†o gi·ªè h√†ng
    cloneImg.style.left = `${cartRect.left + cartRect.width / 2}px`;
    cloneImg.style.top = `${cartRect.top + cartRect.height / 2}px`;
    cloneImg.style.width = "0px";
    cloneImg.style.height = "0px";
    cloneImg.style.opacity = "0.5";

    cloneImg.addEventListener("transitionend", () => {
      cloneImg.remove();
    });

    setAdding(true);
    try {
      await axios.post("http://localhost:5000/cart/add", {
        product_id: product.id,
        quantity: 1,
      }, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      alert("üõí ƒê√£ th√™m v√†o gi·ªè h√†ng!");
      // TODO: C·∫≠p nh·∫≠t gi·ªè h√†ng trong state ho·∫∑c context n·∫øu c√≥

    } catch (error) {
      console.error("L·ªói khi th√™m v√†o gi·ªè h√†ng:", error);
      if (error.response?.status === 401) {
        alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p l·∫°i!");
      } else {
        alert("Th√™m v√†o gi·ªè h√†ng th·∫•t b·∫°i!");
      }
    } finally {
      setAdding(false);
    }
  };

  if (!product) return <p>ƒêang t·∫£i...</p>;

  return (
    <div className="container py-4">
      <div className="row">
        <div className="col-md-5">
          <img
            ref={imgRef}
            src={product.image || "https://via.placeholder.com/300"}
            alt={product.name}
            className="img-fluid"
            style={{ borderRadius: "8px" }}
          />
        </div>
        <div className="col-md-7">
          <h2>{product.name}</h2>
          <h4 className="text-danger">
            {Number(product.price).toLocaleString("vi-VN")}‚Ç´
          </h4>

          <table className="table mt-3">
            <tbody>
              <tr><th>H√£ng</th><td>{product.brand}</td></tr>
              <tr><th>CPU</th><td>{product.cpu || "Ch∆∞a r√µ"}</td></tr>
              <tr><th>RAM</th><td>{product.ram}</td></tr>
              <tr><th>B·ªô nh·ªõ</th><td>{product.storage}</td></tr>
              <tr><th>M√†n h√¨nh</th><td>{product.screen}</td></tr>
              <tr><th>Pin</th><td>{product.battery}</td></tr>
              <tr><th>H·ªá ƒëi·ªÅu h√†nh</th><td>{product.os}</td></tr>
              <tr><th>Camera tr∆∞·ªõc</th><td>{product.camera_front}</td></tr>
              <tr><th>Camera sau</th><td>{product.camera_rear}</td></tr>
              <tr><th>M√†u s·∫Øc</th><td>{product.color}</td></tr>
              <tr><th>K√≠ch th∆∞·ªõc</th><td>{product.dimensions}</td></tr>
              <tr><th>Tr·ªçng l∆∞·ª£ng</th><td>{product.weight}</td></tr>
              <tr><th>C·ªïng k·∫øt n·ªëi</th><td>{product.ports}</td></tr>
              <tr><th>B·∫£o h√†nh</th><td>{product.warranty}</td></tr>
              <tr><th>Ng√†y ph√°t h√†nh</th><td>{product.release_date}</td></tr>
            </tbody>
          </table>

          <button
            onClick={handleAddToCart}
            className="btn btn-warning mt-3"
            disabled={adding}
          >
            {adding ? "ƒêang th√™m..." : "Th√™m v√†o gi·ªè"}
          </button>
        </div>
      </div>
    </div>
  );
}

export default ProductDetail;
